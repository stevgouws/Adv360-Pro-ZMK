/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        tap_dance_shift_caps_word: tap_dance_shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    macros {
        arrow: arrow2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp EQUAL &kp GREATER_THAN &kp SPACE>;
            label = "ARROW2";
        };

        switch_to_windows: windows {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 2 &bt BT_SEL 2>;
            label = "WINDOWS";
        };

        switch_to_mac: mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog 2 &bt BT_SEL 0>;
            label = "MAC";
        };
    };

    combos {
        compatible = "zmk,combos";

        ER {
            bindings = <&kp ESCAPE>;
            key-positions = <18 17>;
            timeout-ms = <15>;
            layers = <0 2 6 5 1>;
        };

        DF {
            bindings = <&mkp MB1>;
            key-positions = <32 31>;
            layers = <0 2>;
            timeout-ms = <15>;
        };

        SD {
            bindings = <&mkp MB2>;
            key-positions = <30 31>;
            layers = <0 2>;
            timeout-ms = <15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC                       &kp N1    &kp N2     &kp N3     &kp N4     &kp N5  &tog 3                                                                                    &mo 4      &kp N6  &kp N7     &kp N8         &kp N9    &kp N0    &kp MINUS
&kp TAB                       &kp Q     &kp W      &kp E      &kp R      &kp T   &kp TAB                                                                                   &tog 2     &kp Y   &kp U      &kp I          &kp O     &kp P     &kp BSLH
&kp LS(LA(LC(LEFT_COMMAND)))  &kp A     &kp S      &kp D      &kp F      &kp G   &kp LG(GRAVE)  &kp LCMD                  &kp LALT                   &kp LCMD   &mo 5      &none      &kp H   &kp J      &kp K          &kp L     &kp SEMI  &kp SQT
&tap_dance_shift_caps_word    &lt 6 Z   &kp X      &kp C      &kp V      &kp B                                            &hm LS(LEFT_ALT) HOME      &kp PG_UP                        &kp N   &kp M      &kp COMMA      &kp DOT   &kp FSLH  &kp RSHFT
&kp LEFT_CONTROL              &kp CAPS  &kp LG(X)  &kp LG(C)  &kp LG(V)          &kp BSPC       &kp LS(LA(LEFT_CONTROL))  &kp END                    &kp PG_DN  &kp ENTER  &kp SPACE          &kp LG(Z)  &kp LG(LS(Z))  &kp LBKT  &kp RBKT  &mo 4
            >;
        };

        Gaming {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        windows {
            bindings = <
&trans            &trans  &trans     &trans     &trans     &trans  &trans                                                                 &trans  &trans  &trans     &trans         &trans  &trans  &trans
&trans            &trans  &trans     &trans     &trans     &trans  &trans                                                                 &trans  &trans  &trans     &trans         &trans  &trans  &trans
&trans            &trans  &trans     &trans     &trans     &trans  &trans  &kp LCTRL  &mt LEFT_ALT ESCAPE      &kp RIGHT_CONTROL  &trans  &trans  &trans  &trans     &trans         &trans  &trans  &trans
&trans            &trans  &trans     &trans     &trans     &trans                     &trans                   &trans                             &trans  &trans     &trans         &trans  &trans  &trans
&kp LEFT_COMMAND  &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)          &trans  &trans     &trans                   &trans             &trans  &trans          &kp LC(Z)  &kp LS(LC(Z))  &trans  &trans  &trans
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                          &mo 5       &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &bl BL_TOG                                                      &bl BL_INC  &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &rgb_ug RGB_TOG  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &bl BL_DEC  &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                               &kp HOME      &kp PG_UP                         &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 4      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC         &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0           &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 4
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1        &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none           &none       &none  &none  &none
&none  &none         &switch_to_windows  &none         &none         &none         &bootloader                                            &bootloader             &none  &none           &none       &none  &none  &none
&none  &none         &none               &none         &none         &tog 1        &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none           &none       &none  &none  &none
&none  &none         &none               &none         &none         &none                             &none      &none                                           &none  &switch_to_mac  &none       &none  &none  &none
&none  &none         &none               &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC      &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_Symbol {
            bindings = <
&kp TILDE  &kp F1     &kp F2  &kp F3                &kp F4                 &kp F5     &trans                                       &trans  &kp F6          &kp F7                &kp F8                &kp F9           &kp F10  &kp F11
&trans     &trans     &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS  &trans                                       &trans  &kp C_MUTE      &kp C_VOL_DN          &kp C_VOL_UP          &trans           &trans   &trans
&trans     &kp GRAVE  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL  &trans   &trans  &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW        &kp UP_ARROW          &kp RIGHT_ARROW  &trans   &trans
&trans     &trans     &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PLUS                    &trans      &trans                  &trans          &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans           &trans   &trans
&trans     &trans     &trans  &trans                &arrow                            &kp DEL  &trans  &trans      &trans  &trans  &trans                  &trans                &trans                &trans           &trans   &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                      &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &mkp MB2  &mkp MB1  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
